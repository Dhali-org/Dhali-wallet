// Mocks generated by Mockito 5.4.0 from annotations
// in dhali_wallet/test/dhali_wallet_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dhali_wallet/xrpl_types.dart' as _i6;
import 'package:dhali_wallet/xrpl_wallet.dart' as _i3;
import 'package:flutter/material.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:xrpl/xrpl.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeValueNotifier_0<T> extends _i1.SmartFake
    implements _i2.ValueNotifier<T> {
  _FakeValueNotifier_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePaymentChannelDescriptor_1 extends _i1.SmartFake
    implements _i3.PaymentChannelDescriptor {
  _FakePaymentChannelDescriptor_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [XRPLWallet].
///
/// See the documentation for Mockito's code generation for more information.
class MockXRPLWallet extends _i1.Mock implements _i3.XRPLWallet {
  MockXRPLWallet() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set mnemonic(String? _mnemonic) => super.noSuchMethod(
        Invocation.setter(
          #mnemonic,
          _mnemonic,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.ValueNotifier<String?> get balance => (super.noSuchMethod(
        Invocation.getter(#balance),
        returnValue: _FakeValueNotifier_0<String?>(
          this,
          Invocation.getter(#balance),
        ),
      ) as _i2.ValueNotifier<String?>);
  @override
  set balance(_i2.ValueNotifier<String?>? _balance) => super.noSuchMethod(
        Invocation.setter(
          #balance,
          _balance,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get address => (super.noSuchMethod(
        Invocation.getter(#address),
        returnValue: '',
      ) as String);
  @override
  String publicKey() => (super.noSuchMethod(
        Invocation.method(
          #publicKey,
          [],
        ),
        returnValue: '',
      ) as String);
  @override
  String sendDrops(
    String? amount,
    String? channelId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendDrops,
          [
            amount,
            channelId,
          ],
        ),
        returnValue: '',
      ) as String);
  @override
  _i4.Future<dynamic> submitRequest(
    _i5.BaseRequest? request,
    _i5.Client? client,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #submitRequest,
          [
            request,
            client,
          ],
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
  @override
  _i4.Future<dynamic> getAvailableNFTs() => (super.noSuchMethod(
        Invocation.method(
          #getAvailableNFTs,
          [],
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
  @override
  _i4.Future<bool> acceptOffer(String? offerIndex) => (super.noSuchMethod(
        Invocation.method(
          #acceptOffer,
          [offerIndex],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
  @override
  _i4.Future<List<_i6.NFTOffer>> getNFTOffers(String? nfTokenId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getNFTOffers,
          [nfTokenId],
        ),
        returnValue: _i4.Future<List<_i6.NFTOffer>>.value(<_i6.NFTOffer>[]),
      ) as _i4.Future<List<_i6.NFTOffer>>);
  @override
  _i4.Future<List<_i3.PaymentChannelDescriptor>> getOpenPaymentChannels(
          {String? destination_address}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getOpenPaymentChannels,
          [],
          {#destination_address: destination_address},
        ),
        returnValue: _i4.Future<List<_i3.PaymentChannelDescriptor>>.value(
            <_i3.PaymentChannelDescriptor>[]),
      ) as _i4.Future<List<_i3.PaymentChannelDescriptor>>);
  @override
  _i4.Future<_i3.PaymentChannelDescriptor> openPaymentChannel(
    String? destinationAddress,
    String? amount,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #openPaymentChannel,
          [
            destinationAddress,
            amount,
          ],
        ),
        returnValue: _i4.Future<_i3.PaymentChannelDescriptor>.value(
            _FakePaymentChannelDescriptor_1(
          this,
          Invocation.method(
            #openPaymentChannel,
            [
              destinationAddress,
              amount,
            ],
          ),
        )),
      ) as _i4.Future<_i3.PaymentChannelDescriptor>);
}
